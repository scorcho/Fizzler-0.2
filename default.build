<?xml version="1.0" encoding="utf-8"?>
<project name="Fizzler" basedir="." default="debug">

	<target name="debug">
		<property name="debug" value="true" />
		<property name="configuration" value="Debug" />
		<if test="${framework::get-family(framework::get-runtime-framework()) != 'mono'}">
			<call target="build" />
		</if>

		<if test="${framework::get-family(framework::get-runtime-framework()) == 'mono'}">
			<echo message="Running MONO build." />
			<property name="output.dir" value="" />
			<property name="net-35" value="true" />
			<property name="mono" value="true" />
			<call target="test" />
		</if>
	</target>

	<target name="release">
		<property name="debug" value="false" />
		<property name="configuration" value="Release" />

		<if test="${framework::get-family(framework::get-runtime-framework()) != 'mono'}">
			<call target="build" />
		</if>

		<if test="${framework::get-family(framework::get-runtime-framework()) == 'mono'}">
			<echo message="Running MONO build." />
			<property name="output.dir" value="" />
			<property name="net-35" value="true" />
			<property name="mono" value="true" />
			<call target="test" />
		</if>
	</target>

	<target name="clean">
		<delete dir="bin" />
		<delete dir="Fizzler.Systems.HtmlAgilityPack\bin" />
		<delete dir="Fizzler.Systems.HtmlAgilityPack\obj" />
		<delete dir="Fizzler\bin" />
		<delete dir="Fizzler\obj" />
		<delete dir="Fizzler.Tests\bin" />
		<delete dir="Fizzler.Tests\obj" />
	</target>

	<target name="prep" depends="clean">
		<mkdir dir="bin//${output.dir}${configuration}" />
		<mkdir dir="bin//${output.dir}${configuration}" />
	</target>

	<target name="build">
		<property name="mono" value="false" />
		<property name="output.dir" value="NET-2.0//" />
		<property name="net-35" value="false" />
		<call target="test" />
		<property name="output.dir" value="" />
		<property name="net-35" value="true" />
		<call target="test" />
	</target>

	<target name="build-fizzler" depends="prep">
		<echo message="net-35 is: ${bool::parse(net-35)}" />
		<csc target="library" noconfig="true" output="bin//${output.dir}${configuration}//Fizzler.dll" debug="${debug}">
			<sources>
				<include name="Fizzler/**/*.cs" />
			</sources>
			<references>
				<include name="System.dll" />
				<include name="System.Core.dll" if="${bool::parse(net-35)}" />
				<include name="libs/BackLINQ.dll" unless="${bool::parse(net-35)}" />
			</references>
		</csc>
	</target>

	<target name="build-htmlagilitypack" depends="build-xmlnodequery">
		<csc target="library" noconfig="true" output="bin//${output.dir}${configuration}//Fizzler.Systems.HtmlAgilityPack.dll" debug="${debug}">
			<sources>
				<include name="NET-2.0/ExtensionAttribute.cs" unless="${bool::parse(net-35)}" />
				<include name="Fizzler.Systems.HtmlAgilityPack/**/*.cs" />
			</sources>
			<references>
				<include name="bin/${output.dir}${configuration}/Fizzler.dll" />
				<include name="libs/HtmlAgilityPack.dll" />
				<include name="System.dll" />
				<include name="System.Core.dll" if="${bool::parse(net-35)}" />
				<include name="libs/BackLINQ.dll" unless="${bool::parse(net-35)}" />
				<include name="System.XML.dll" />
			</references>
		</csc>
	</target>

	<target name="build-xmlnodequery" depends="build-fizzler">
		<csc target="library" noconfig="${not bool::parse(mono)}" output="bin//${output.dir}${configuration}//Fizzler.Systems.XmlNodeQuery.dll" debug="${debug}">
			<sources>
				<include name="Fizzler.Systems.XmlNodeQuery/**/*.cs" />
				<include name="NET-2.0/ExtensionAttribute.cs" unless="${bool::parse(net-35)}" />
			</sources>
			<references>
				<include name="bin/${output.dir}${configuration}/Fizzler.dll" />
				<include name="libs/SgmlReaderDll.dll" />
				<include name="System.dll" />
				<include name="System.Core.dll" if="${bool::parse(net-35)}" />
				<include name="libs/BackLINQ.dll" unless="${bool::parse(net-35)}" />
				<include name="System.XML.dll" />
			</references>
		</csc>
	</target>

	<target name="build-consolefizzler" depends="build-htmlagilitypack">
		<csc target="exe" noconfig="true" output="bin//${output.dir}${configuration}//fizz.exe" debug="${debug}">
			<sources>
				<include name="NET-2.0/ExtensionAttribute.cs" unless="${bool::parse(net-35)}" />
				<include name="ConsoleFizzler/**/*.cs" />
			</sources>
			<references>
				<include name="bin/${output.dir}${configuration}/Fizzler.dll" />
				<include name="bin/${output.dir}${configuration}/Fizzler.Systems.HtmlAgilityPack.dll" />
				<include name="libs/HtmlAgilityPack.dll" />
				<include name="System.dll" />
				<include name="System.Core.dll" if="${bool::parse(net-35)}" />
				<include name="libs/BackLINQ.dll" unless="${bool::parse(net-35)}" />
				<include name="System.XML.dll" />
				<include name="System.Configuration.dll" />
			</references>
		</csc>
	</target>
	<target name="build-visualfizzler" depends="build-consolefizzler">
		<csc target="exe" noconfig="true" output="bin//${output.dir}${configuration}//VisualFizzler.exe" debug="${debug}">
			<sources>
				<include name="VisualFizzler/**/*.cs" />
				<include name="NET-2.0/ExtensionAttribute.cs" unless="${bool::parse(net-35)}" />
				<include name="NET-2.0/Actions.cs" unless="${bool::parse(net-35)}" />
			</sources>
			<resources dynamicprefix="true">
				<include name="VisualFizzler/**/*.resx" />
			</resources>
			<references>
				<include name="bin/${output.dir}${configuration}/Fizzler.dll" />
				<include name="bin/${output.dir}${configuration}/Fizzler.Systems.HtmlAgilityPack.dll" />
				<include name="libs/HtmlAgilityPack.dll" />
				<include name="Microsoft.VisualBasic.dll" />
				<include name="System.dll" />
				<include name="System.Core.dll" if="${bool::parse(net-35)}" />
				<include name="libs/BackLINQ.dll" unless="${bool::parse(net-35)}" />
				<include name="System.Deployment.dll" />
				<include name="System.Drawing.dll" />
				<include name="System.Windows.Forms.dll" />
				<include name="System.XML.dll" />
			</references>
		</csc>
	</target>
	<target name="build-tests" depends="build-visualfizzler">
		<csc target="library" noconfig="${not bool::parse(mono)}" output="bin//${output.dir}${configuration}//Fizzler.Tests.dll" debug="${debug}">
			<sources>
				<include name="Fizzler.Tests/**/*.cs" />
				<include name="NET-2.0/Actions.cs" unless="${bool::parse(net-35)}" />
			</sources>
			<resources dynamicprefix="true">
				<include name="Fizzler.Tests/*.html" />
			</resources>
			<references>
				<include name="bin/${output.dir}${configuration}/Fizzler.dll" />
				<include name="bin/${output.dir}${configuration}/Fizzler.Systems.HtmlAgilityPack.dll" />
				<include name="bin/${output.dir}${configuration}/Fizzler.Systems.XmlNodeQuery.dll" />
				<include name="libs\HtmlAgilityPack.dll" />
				<include name="libs\SgmlReaderDll.dll" />
				<include name="libs\nunit.framework.dll" />
				<include name="System.dll" />
				<include name="System.Core.dll" if="${bool::parse(net-35)}" />
				<include name="libs/BackLINQ.dll" unless="${bool::parse(net-35)}" />
				<include name="System.XML.dll" />
			</references>
		</csc>
	</target>
	<target name="test" depends="build-tests">
		<copy file="libs/HtmlAgilityPack.dll" todir="bin//${output.dir}${configuration}" />
		<copy file="libs/SgmlReaderDll.dll" todir="bin//${output.dir}${configuration}" />
		<copy file="libs/BackLINQ.dll" todir="bin//${output.dir}${configuration}" unless="${bool::parse(net-35)}" />
		<copy file="libs/nunit.framework.dll" todir="bin//${output.dir}${configuration}" />
		<nunit2>
			<formatter type="Plain" />
			<test assemblyname="bin//${output.dir}${configuration}//Fizzler.Tests.dll" appconfig="Fizzler.Tests/App.config" />
		</nunit2>
	</target>
</project>